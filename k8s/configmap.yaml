apiVersion: v1
kind: ConfigMap
metadata:
  name: javascript-app-config
  namespace: javascript-namespace
  labels:
    app: javascript-app
    environment: production
data:
  # Application configuration
  NODE_ENV: "production"
  PORT: "8080"
  ENVIRONMENT: "production"
  
  # Security configuration
  SECURE_HEADERS: "true"
  FORCE_HTTPS: "true"
  SESSION_SECURE: "true"
  
  # Logging configuration
  LOG_LEVEL: "info"
  LOG_FORMAT: "json"
  
  # Performance configuration
  COMPRESSION_ENABLED: "true"
  CACHE_ENABLED: "true"
  
  # Health check configuration
  HEALTH_CHECK_PATH: "/health"
  READINESS_CHECK_PATH: "/ready"
  
  # Nginx configuration
  nginx.conf: |
    server {
        listen 8080;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline' fonts.googleapis.com; font-src 'self' fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self';" always;

        # Remove server tokens
        server_tokens off;

        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_proxied expired no-cache no-store private auth;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/javascript
            application/xml+rss
            application/json;

        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }

        # Handle React Router
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Readiness check endpoint
        location /ready {
            access_log off;
            return 200 "ready\n";
            add_header Content-Type text/plain;
        }

        # Deny access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
